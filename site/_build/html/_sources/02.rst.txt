######################
그리드 맛보기
######################

npm으로 그리드 사용하기
=======================

node 환경에서 그리드를 사용하는 방법을 익혀봅니다.

1. 그리드를 ``npm`` 으로 설치합니다.

.. code-block:: sh

    npm install tui-grid


2. 프로젝트 내 ``package.json`` 파일에 정상적으로 그리드가 추가되었는지 확인합니다.

.. code-block:: json

    {
      "dependencies": "tui-grid"
    }


스크립트 추가
=====================

모듈 포맷으로 그리드를 가져와 사용하는 방법을 익혀봅니다.

1. 프로젝트의 ``src/index.js`` 파일을 열고 그리드를 추가해봅니다.

.. code-block:: javascript

    var Grid = require('tui-grid');

    console.log('# 그리드 생성자 확인 :', Grid);

2. 다음 커멘드를 실행하여 서버를 띄워 그리드를 정상적으로 가져왔는지 확인해봅니다.

.. code-block:: sh

    npm run develop


html, css 추가
=====================

그리드를 UI를 위한 html 및 css 파일을 추가해봅니다.

1. 프로젝트의 ``demo/index.html`` 파일을 열고 태그(그리드 생성 컨테이너 엘리먼트)를 추가합니다.

.. code-block:: html

    <body>
      ...
      <div id="grid"></div>
      ...
    </body>

2. css는 다음 2가지 방식으로 추가할 수 있습니다.

* css 파일을 직접 추가 : ``demo/index.html`` 파일에 스타일 태그를 삽입합니다.

.. code-block:: html

    <head>
      ...
      <link rel="stylesheet" type="text/css" href="../node_modules/tui-grid/tui-grid.css" />
      ...
    </head>

* 모듈 포맷으로 추가 : 스크립트를 추가하는 방식과 동일하게 모듈로 가져옵니다.

.. code-block:: javascript

    require('tui-grid/tui-grid.css');



그리드 인스턴스 생성
=====================

그리드는 생성자 함수로 인스턴스를 생성하여 사용하고 관련 메서드들을 API로 사용할 수 있습니다.

1. 인스턴스를 생성해봅니다. 이 때 반드시 필수 옵션을 파라미터로 넘겨주어야 합니다.

* 인스턴스 생성 옵션 정보 : https://nhnent.github.io/tui.grid/latest/Grid.html

.. code-block:: javascript

    ...

    var options = {
      el: $('#grid'), // 그리드가 생성되는 컨테이너 엘리먼트
      columns: [ // 그리드 컬럼 정보 세팅
        {
            title: 'Name',
            name: 'name'
        },
        {
            title: 'Artist',
            name: 'artist'
        },
        {
            title: 'Release',
            name: 'release'
        },
        {
            title: 'Genre',
            name: 'genre'
        }
      ],
      data: [ // 그리드 데이터 세팅
        {
            name: 'Beautiful Lies',
            artist: 'Birdy',
            release: '2016.03.26',
            genre: 'Pop'
        }
      ]
    };

    var instance = new Grid(options);

    console.log(instance);


2. 인스턴스가 정상적으로 생성되었는지 확인하고 API를 하나 호출해봅니다.

* 그리드 API 목록 : https://nhnent.github.io/tui.grid/latest/Grid.html#.applyTheme

.. code-block:: javascript

    ...

    var rowData = [
      {
          name: '+',
          artist: 'Ad Sheeran',
          release: '2014.06.24',
          genre: 'Pop'
      },
      {
          name: 'A Head Full Of Dreams',
          artist: 'Coldplay',
          release: '2015.12.04',
          genre: 'Rock'
      }
    ];

    instance.appendRow(rowData);

3. 다음과 같이 총 3개의 행을 가진 그리드가 생성되었는지 확인해봅니다.

.. image:: _static/img1.png
